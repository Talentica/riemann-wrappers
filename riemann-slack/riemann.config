; -*- mode: clojure; -*-
; vim: filetype=clojure

; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

(include "./include")

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

;;(def tell-ops (rollup 1 60 slacker))
(streams
(where (and (state "critical") (not= service "service.name"))
;(where (state "critical")
prn
#(info %)
(throttle 1 60 slacker)
))

(streams
(expired
        (where (not= service "service.name")
prn
#(info %)
(throttle 1 60 slacker)
)))
